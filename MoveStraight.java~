// Nathan Hsiao
// This is an interface class that checks if the piece is able to move in the same column and direction

public interface MoveStraight{
   
   // this checks if the method is in the same row
   public static boolean checkRow(ChessPiece piece, int column, int row){
    
     // this checks if the method checks if it is in the same row
    if(piece.getRow() == row && piece.getColumn() != column){
    
      return true;
    }
    
    return false;
  }
  
   // this checks if the method is in the same column
  public static boolean checkColumn(ChessPiece piece, int column, int row){
   
    // this if statement checks to see if it is in the same column
    if (piece.getRow() != row && piece.getColumn() == column){
    
    return true;
    }
    
    return false;
  }
  
  public static boolean checkRowMove1(ChessPiece piece, int column, int row){
    
    // the method checks if it the pieces moves up by one
    if (piece.getRow() == row &&  piece.getColumn() == column +1){
    return true;
    }
    
    // the method checks if the pieces move horizonatlly by one
    if( piece.getRow() == row +1 && piece.getColumn() == column){
    return true;
    }
    
    else
      return false;
  }
  
  // checks the method for the movement of a knight
  public static boolean moveKnight(ChessPiece piece, int column, int row){
   
    // 
    if(piece.getRow() == row + 1 && piece.getColumn()== column + 2){
    return true;
    }
    
    if (piece.getRow() == row+2 && piece.getColumn()== column+1){
    return true;
    }
    
    else 
      return true;
  }
  
  }
